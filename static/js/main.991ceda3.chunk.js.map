{"version":3,"sources":["logo.svg","components/header.js","components/UploadButton.js","components/canvas.js","components/controlpanel.js","App.js","reportWebVitals.js","index.js","components/control.module.css","App.module.css","components/header.module.css","components/canvas.module.css"],"names":["Header","className","headerCSS","pink","UploadButton","state","canvas","Grid","container","direction","justify","spacing","item","xs","md","uploadBtnCSS","center","IconButton","aria-label","value","onClick","e","props","changeCanvas","ArrowBackIos","fontSize","ArrowForwardIos","Button","variant","color","startIcon","fullWidth","component","this","newCanvas","type","hidden","id","accept","onChange","uploadImage","Component","Canvas","canvasCSS","deft","fill","fontStyle","fontWeight","underline","fontFamily","opacity","deftR","x","y","Control","input","watermark","watermarkProps","drawer","outputProps","numTag","format","filename","repeat","handleText","bind","delCanvas","handleInput","handleTextChange","handleFontFamily","handleOpacity","convertToImagen","batchDownload","setState","currentTarget","name","prevState","console","log","fabric","Text","canvasMark","clone","cloned","offset","group","Group","globalCompositeOperation","coords","getCoords","tr","bl","Math","abs","add","set","addWithUpdate","discardActiveObject","setActiveObject","getObjects","paste","visible","remove","requestRenderAll","image","left","top","height","width","setCoords","preState","target","val","clear","dispose","preserveObjectStacking","fireRightClick","allowTouchScrolling","resetCanvas","on","opt","delta","deltaY","zoom","getZoom","zoomToPoint","offsetX","offsetY","preventDefault","stopPropagation","renderAll","stylename","text","Object","open","event","key","img","entries","length","textSize","saveCurrentcanvas","Dummycanvas","index","cobj","ArrayOfCanvas","loadFromJSON","url","sel","toDataURL","replace","saveAs","concat","items","destroy","forEach","apply","uri","link","document","createElement","download","href","body","appendChild","click","removeChild","window","prevProps","canvasSpin","obj","undefined","prop","FormControlLabel","control","Checkbox","checked","inputProps","disabled","handleRepeat","label","labelPlacement","FormControl","InputLabel","htmlFor","Select","native","defaultValue","TextField","maxLength","ButtonGroup","controlCSS","textbuttons","handleProps","FormatBold","FormatItalic","FormatUnderlined","style","marginTop","slider","Typography","align","Slider","marginBottom","aria-labelledby","round","valueLabelDisplay","CloudDownload","toggleDrawer","Drawer","anchor","onClose","handleOutputProps","FormLabel","RadioGroup","Radio","App","images","canvasIndex","resizeCanvas","startPan","reader","FileReader","onload","imgObj","Image","src","result","padding","cornersize","hasControls","selectable","lockMovementX","lockMovementY","getElementsByClassName","offsetWidth","offsetHeight","centerObject","files","readAsDataURL","isload","getElementById","prev","arr","splice","util","object","toObject","oldcanvas","button","x0","screenX","y0","screenY","addEventListener","continuePan","stopPan","removeEventListener","relativePan","setHeight","setWidth","MainCSS","sm","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"2PAAe,I,wCCUAA,MATf,WACI,OACM,+BACG,2CACA,oBAAIC,UAAWC,IAAUC,KAAzB,sB,wGCkEEC,E,kDA3DX,aAAc,IAAD,8BACT,gBACKC,MAAO,CACVC,OAAO,IAHA,E,0CAQb,WAAS,IAAD,OACJ,OACF,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,QAAS,EAA1D,UACI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGb,UAAWc,IAAaC,OAAjD,SACI,cAACC,EAAA,EAAD,CAAYC,aAAW,YAAYC,MAAM,OAAOC,QAAS,SAACC,GAAD,OAAO,EAAKC,MAAMC,aAAaF,IAAxF,SACI,cAACG,EAAA,EAAD,CAAcC,SAAS,cAG9B,cAAClB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGb,UAAWc,IAAaC,OAAjD,SACG,cAACC,EAAA,EAAD,CAAYC,aAAW,aAAaC,MAAM,QAASC,QAAS,SAACC,GAAD,OAAO,EAAKC,MAAMC,aAAaF,IAA3F,SACI,cAACK,EAAA,EAAD,CAAiBD,SAAS,cAInC,cAAClB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGb,UAAWc,IAAaC,OAAjD,SACG,cAACW,EAAA,EAAD,CACCC,QAAQ,YACPC,MAAM,UACPC,UAAW,cAAC,IAAD,IACXC,WAAS,EACTC,UAAU,QACVZ,QAAUa,KAAKX,MAAMY,UANtB,0BAYH,cAAC3B,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGb,UAAWc,IAAaC,OAAjD,SACG,eAACW,EAAA,EAAD,CACCC,QAAQ,YACPC,MAAM,UACPC,UAAW,cAAC,IAAD,IACXC,WAAS,EACTC,UAAU,QALX,wBAQE,uBACEG,KAAK,OACLC,QAAM,EACNC,GAAG,aACHC,OAAO,UACPC,SAAU,SAAAlB,GAAC,OAAI,EAAKC,MAAMkB,YAAYnB,kB,GAlD3BoB,a,iBCaPC,E,kDAnBhB,aAAc,IAAD,8BACT,gBACKrC,MAAO,GAFH,E,qDAOjB,c,oBAGI,WAEI,OACE,qBAAKJ,UAAY0C,IAAUnC,UAAW6B,GAAG,YAAzC,SACG,wBAAQA,GAAG,iB,GAfHI,a,2LCSfG,GAAO,CAAEC,KAAM,UAAWC,UAAW,SAAUC,WAAY,SAAUC,WAAW,EAAOC,WAAY,kBAAmBC,QAAS,GAC/HC,GAAQ,CAAEC,GAAG,EAAOC,GAAG,GA4hBdC,G,kDA1hBX,aAAe,IAAD,8BACV,gBACKjD,MAAQ,CACTkD,MAAO,GACPC,UAAW,GACXC,eAAgBb,GAChBc,QAAQ,EACRC,YAAa,CAAEC,QAAQ,EAAOC,OAAQ,MAAOC,SAAU,WACvDC,OAAQZ,IAEZ,EAAKa,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBACxB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,gBACrB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKO,cAAgB,EAAKA,cAAcP,KAAnB,gBAjBX,E,+CAqBd,SAAY9C,GACRc,KAAKwC,SAAS,CAAElB,MAAOpC,M,+BAG3B,SAAkBE,GAAI,IAAD,OACbF,EAAQE,EAAEqD,cAAcvD,MACxBwD,EAAOtD,EAAEqD,cAAcC,KACd,WAATA,GAA8B,aAATA,EACrB1C,KAAKwC,UAAS,SAAAG,GAAS,MAAK,CAAEjB,YAAY,2BAAMiB,EAAUjB,aAAjB,kBAA+BgB,EAAOxD,QAAY,kBAAM0D,QAAQC,IAAI,EAAKzE,MAAMsD,gBACxG,WAATgB,GACP1C,KAAKwC,UAAS,SAAAG,GAAS,MAAK,CAAEjB,YAAY,2BAAMiB,EAAUjB,aAAjB,kBAA+BgB,GAAQC,EAAUjB,YAAYgB,SAAY,kBAAME,QAAQC,IAAI,EAAKzE,MAAMsD,kB,0BAIvJ,SAAatC,GAAI,IAAD,OACRsD,EAAOtD,EAAEqD,cAAcC,KACvBnB,EAAYvB,KAAK5B,MAAMmD,UAC3B,GAAIA,aAAqBuB,SAAOC,KAAM,CAClC,IAAI1E,EAAS2B,KAAKX,MAAMhB,OACxB2B,KAAKwC,UAAS,SAAAG,GAAS,MAAK,CAAEb,OAAO,2BAAMa,EAAUb,QAAjB,kBAA0BY,GAAQC,EAAUb,OAAOY,SAAY,WAC/F,GAAI,EAAKtE,MAAM0D,OAAOY,GAAO,CACzB,IAAIM,EAAa3E,EAAOM,KAAK,GAC7B4C,EAAU0B,OAAM,SAACC,GACb,IAIIC,EAJAC,EAAQ,IAAIN,SAAOO,MAAM,GAAI,CAC7BC,yBAA0B,gBAE1BC,EAASL,EAAOM,YAEpB,GAAa,MAATd,EAAc,CACd,IAAIe,EAAKF,EAAO,GAAGnC,EACfsC,EAAKH,EAAO,GAAGnC,EACnB+B,EAASQ,KAAKC,IAAIH,EAAKC,GAE3B,GAAa,MAAThB,EAAc,CACd,IAAIe,EAAKF,EAAO,GAAGpC,EACfuC,EAAKH,EAAO,GAAGpC,EACnBgC,EAASQ,KAAKC,IAAIH,EAAKC,GAE3BrF,EAAOwF,IAAIT,GACXF,EAAOY,IAAI,CAAER,yBAA0B,gBACvCF,EAAMS,IAAIX,GACVE,EAAMW,gBACN1F,EAAO2F,sBACP3F,EAAO4F,gBAAgBb,GACvBR,QAAQC,IAAIxE,EAAO6F,cACnB,EAAKC,MAAMf,EAAOF,EAAQC,EAAQT,GAClCM,EAAWc,IAAI,CACXM,SAAS,QAIW,IAA5B,EAAKhG,MAAM0D,OAAOY,IACdrE,EAAOM,KAAK,aAAcmE,SAAOO,QACjChF,EAAOgG,OAAOhG,EAAOM,KAAK,IAC1BN,EAAOM,KAAK,GAAGmF,IAAI,CACfM,SAAS,IAEb/F,EAAOiG,0B,mBAO3B,SAAMlB,EAAOH,EAAOE,EAAQT,GAAO,IAAD,OAC1BrE,EAAS2B,KAAKX,MAAMhB,OACpBkG,EAAQlG,EAAO6F,aAAa,GAChCjB,EAAMA,OAAM,SAACC,GACI,MAATR,GACAQ,EAAOY,IAAI,CACPU,KAAMtB,EAAOsB,KACbC,IAAKvB,EAAOuB,IAAMtB,IAGb,MAATT,GACAQ,EAAOY,IAAI,CACPU,KAAMtB,EAAOsB,KAAOrB,EAAS,GAC7BsB,IAAKvB,EAAOuB,MAGpBrB,EAAMS,IAAIX,GACVE,EAAMW,gBACNnB,QAAQC,IAAIO,EAAMsB,QAClB9B,QAAQC,IAAI0B,EAAMG,QACL,MAAThC,GACIU,EAAMsB,OAASH,EAAMG,QAKhB,MAAThC,GACIU,EAAMuB,MAAQJ,EAAMI,MALpBtG,EAAOiG,oBAUflB,EAAMwB,YACN,EAAKT,MAAMf,EAAOF,EAAQC,EAAQT,S,yBAK1C,SAAYtD,GAAI,IAAD,OACPF,EAAQE,EAAEqD,cAAcvD,MAExBwD,EAAOtD,EAAEqD,cAAcC,KACd,eAATA,GAAkC,cAATA,EACrB1C,KAAK5B,MAAMoD,eAAekB,KAAUxD,EACpCc,KAAKwC,UAAS,SAAAqC,GAAQ,MAClB,CACIrD,eAAe,2BAAMqD,EAASrD,gBAAhB,kBAAiCkB,EAAO,eACtD,kBAAM,EAAKP,iBAAiBO,MAEpC1C,KAAKwC,UAAS,SAAAqC,GAAQ,MAAM,CAEpBrD,eAAe,2BAAMqD,EAASrD,gBAAhB,kBAAiCkB,EAAOxD,QACtD,kBAAM,EAAKiD,iBAAiBO,MAExB,cAATA,EACP1C,KAAKwC,UAAS,SAAAqC,GAAQ,MAClB,CACIrD,eAAe,2BAAMqD,EAASrD,gBAAhB,kBAAiCkB,GAAQmC,EAASrD,eAAekB,SAC/E,kBAAM,EAAKP,iBAAiBO,MACpB,SAATA,GACP1C,KAAKwC,UAAS,SAAAqC,GAAQ,MAClB,CACIrD,eAAe,2BAAMqD,EAASrD,gBAAhB,kBAAiCkB,EAAOxD,QACtD,kBAAM,EAAKiD,iBAAiBO,Q,8BAG5C,SAAiBtD,GAAI,IAAD,OAChBY,KAAKwC,UAAS,SAAAqC,GAAQ,MAClB,CAAErD,eAAe,2BAAMqD,EAASrD,gBAAhB,IAAgCR,WAAY5B,EAAE0F,OAAO5F,YAAY,WAAQ,EAAKiD,iBAAiB,mB,2BAGvH,SAAc/C,EAAG2F,GAAM,IAAD,OACP3F,EAAEqD,cAAcC,KAC3B1C,KAAKwC,UAAS,SAAAqC,GAAQ,MAClB,CAAErD,eAAe,2BAAMqD,EAASrD,gBAAhB,IAAgCP,QAAS8D,EAAM,UAAU,WACrEnC,QAAQC,IAAI,EAAKzE,MAAMoD,eAAeP,SACtC,EAAKkB,iBAAiB,gB,uBAKlC,WACI,IAAI9D,EAAS2B,KAAKX,MAAMhB,OACxBA,EAAO2G,QACP3G,EAAO4G,UACPjF,KAAKwC,SAAS,CAAEjB,UAAW,KAC3BlD,EAAS,IAAIyE,SAAOrC,OAAO,SAAU,CACjCyE,wBAAwB,EACxBC,gBAAgB,EAChBC,qBAAqB,IAEzBpF,KAAKX,MAAMgG,YAAYhH,GACvBA,EAAOiH,GAAG,eAAe,SAAUC,GAC/B,IAAIC,EAAQD,EAAInG,EAAEqG,OACdC,EAAOrH,EAAOsH,WAClBD,GAAI,SAAI,KAASF,IACN,KAAIE,EAAO,IAClBA,EAAO,MAAMA,EAAO,KACxBrH,EAAOuH,YAAY,CAAEzE,EAAGoE,EAAInG,EAAEyG,QAASzE,EAAGmE,EAAInG,EAAE0G,SAAWJ,GAC3DH,EAAInG,EAAE2G,iBACNR,EAAInG,EAAE4G,qBAEV3H,EAAO4H,YACPrD,QAAQC,IAAIxE,K,8BAGhB,SAAiB6H,EAAWC,GACxB,IAAI9H,EAAS2B,KAAKX,MAAMhB,OACxBuE,QAAQC,IAAIqD,GACRlG,KAAK5B,MAAMmD,qBAAqBuB,SAAOsD,SACrB,SAAdF,EACAlG,KAAK5B,MAAMmD,UAAUuC,IAArB,eACKoC,EAAYC,IAIjBnG,KAAK5B,MAAMmD,UAAUuC,IAArB,eACKoC,EAAYlG,KAAK5B,MAAMoD,eAAe0E,KAG/CtD,QAAQC,IAAI7C,KAAK5B,MAAMmD,WACvBlD,EAAO4H,e,0BAGf,SAAaI,EAAMC,KACXA,GAAwB,YAAfA,EAAMpG,MAAqC,QAAdoG,EAAMC,KAA+B,UAAdD,EAAMC,MAGvEvG,KAAKwC,SAAS,CAAEf,OAAQ4E,M,wBAG5B,WAAc,IAAD,OACLhI,EAAS2B,KAAKX,MAAMhB,OAEpBmI,EADSnI,EAAO6F,aACH,GAIjB,GAHAtB,QAAQC,IAAIxE,GACZuE,QAAQC,IAAI7C,KAAK5B,MAAMmD,WACvBqB,QAAQC,IAAI2D,GACRA,GAAuD,IAAhDJ,OAAOK,QAAQzG,KAAK5B,MAAMmD,WAAWmF,OAAc,CAC1D,IACIC,EADUH,EAAI9B,OAAO8B,EAAI9B,OACN,KAEnByB,EAAO,IAAIrD,SAAOC,KAAK/C,KAAK5B,MAAMkD,MAAO,CACzC9B,SAAUmH,EACVnC,KAAMgC,EAAIhC,KACVC,IAAK+B,EAAI/B,IACTrE,GAAI,OACJS,UAAWb,KAAK5B,MAAMoD,eAAeX,UACrCC,WAAYd,KAAK5B,MAAMoD,eAAeV,WACtCF,KAAMZ,KAAK5B,MAAMoD,eAAeZ,KAChCI,WAAYhB,KAAK5B,MAAMoD,eAAeR,WACtCD,UAAWf,KAAK5B,MAAMoD,eAAeT,UACrCE,QAASjB,KAAK5B,MAAMoD,eAAeP,QACnCqC,yBAA0B,gBAE9BjF,EAAOwF,IAAIsC,GACXnG,KAAKwC,SAAS,CAAEjB,UAAW4E,IAAQ,WAAQvD,QAAQC,IAAI,EAAKzE,MAAMmD,cAClElD,EAAO2F,2BAEPhE,KAAKmC,iBAAiB,OAAQnC,KAAK5B,MAAMkD,OAE7CjD,EAAO4H,c,2BAGX,WACIjG,KAAKX,MAAMuH,oBACX,IAAIC,EAAc,IAAI/D,SAAOrC,OAAO,SAAU,CAC1CL,GAAI,QACJ8E,wBAAwB,EACxBC,gBAAgB,EAChBC,qBAAqB,IAQzBpF,KAAKsC,gBAAgBuE,EAJP,K,6BAOlB,SAAgBxI,EAAQyI,GAAQ,IAAD,OAE3BlE,QAAQC,IAAI7C,KAAK5B,MAAMsD,aACvB,IAAIqF,EAAO/G,KAAKX,MAAM2H,cAAcF,GACpCzI,EAAO4I,aAAaF,GAAM,WACtB,IAEIG,EAFEC,EAAM,IAAIrE,SAAOO,MAAMhF,EAAO6F,aAAc,IAGZ,QAAlC,EAAK9F,MAAMsD,YAAYE,OACvBsF,EAAMC,EAAIC,UAAU,OAAOC,QAAQ,YAAa,sBACP,SAAlC,EAAKjJ,MAAMsD,YAAYE,SAC9BsF,EAAMC,EAAIC,UAAU,QAAQC,QAAQ,aAAc,uBAEtD,IAAIxF,EAAW,EAAKzD,MAAMsD,YAAYG,SACA,QAAlC,EAAKzD,MAAMsD,YAAYE,QACnB,EAAKxD,MAAMsD,YAAYC,SACvBE,GAAQ,WAAQiF,IAEpB,EAAKQ,OAAOJ,EAAKrF,EAAS0F,OAAO,UACQ,SAAlC,EAAKnJ,MAAMsD,YAAYE,SAC1B,EAAKxD,MAAMsD,YAAYC,SACvBE,GAAQ,WAAQiF,IAEpB,EAAKQ,OAAOJ,EAAKrF,EAAS0F,OAAO,WAErC,IAAIC,EAAQL,EAAIjD,aAShB,GARAiD,EAAIM,UACJpJ,EAAOgG,OAAO8C,GACdK,EAAME,SAAQ,SAAU/I,GACpBA,EAAKmF,IAAI,SAAS,MAEtBzF,EAAOwF,IAAI8D,MAAMtJ,EAAQmJ,GACzBnJ,EAAO4H,YACPrD,QAAQC,IAAIiE,GACRA,IAAU,EAAKzH,MAAM2H,cAAcN,OAAS,EAK5C,OAJA9D,QAAQC,IAAI,UACZxE,EAAO2G,QACP3G,EAAO4G,eACP,EAAK5F,MAAMhB,OAAO4H,YAGtBa,IACA,EAAKxE,gBAAgBjE,EAAQyI,Q,oBAKrC,SAAOc,EAAK/F,GACR,IAAIgG,EAAOC,SAASC,cAAc,KAEL,kBAAlBF,EAAKG,UAEZH,EAAKI,KAAOL,EACZC,EAAKG,SAAWnG,EAGhBiG,SAASI,KAAKC,YAAYN,GAG1BA,EAAKO,QAGLN,SAASI,KAAKG,YAAYR,IAG1BS,OAAOjC,KAAKuB,K,gCAIpB,SAAmBW,GAAY,IAAD,OAC1B,GAAIA,EAAUC,aAAexI,KAAKX,MAAMmJ,WAAY,CAChD,IAAIC,EAAMzI,KAAKX,MAAMhB,OAAO6F,aAC5BtB,QAAQC,IAAI4F,GACO,IAAfA,EAAI/B,QAGJ1G,KAAKwC,SAAS,CAAEjB,UAAW,KAC3BvB,KAAKwC,SAAS,CAAElB,MAAO,KACvBtB,KAAKwC,SAAS,CAAEhB,eAAgBb,KAChCX,KAAKwC,SAAS,CAAEV,OAAQZ,MACpB,WACJ,IAAIK,EAAYkH,EAAI,GAChBrF,EAAQqF,EAAI,GAEhB,QAAkBC,IAAdnH,EAAyB,CACzB,EAAKiB,SAAS,CAAEjB,UAAWA,IAC3B,EAAKiB,SAAS,CAAElB,MAAOC,EAAU4E,OAFR,eAGdwC,GACP,EAAKnG,UAAS,SAAAqC,GAAQ,MAAK,CAAErD,eAAe,2BAAMqD,EAASrD,gBAAhB,kBAAiCmH,EAAOpH,EAAUoH,UADjG,IAAK,IAAMA,KAAQ,EAAKvK,MAAMoD,eAAiB,EAApCmH,GAGX,QAAcD,IAAVtF,EAAqB,CACrB,IAAI/E,EAAS,EAAKgB,MAAMhB,OACpB+E,EAAMsB,OAASrG,EAAOqG,OACtB,EAAKlC,SAAS,CAAEV,OAAQ,CAAEX,GAAG,EAAOC,GAAG,KAChCgC,EAAMuB,MAAQtG,EAAOsG,OAC5B,EAAKnC,SAAS,CAAEV,OAAQ,CAAEX,GAAG,EAAMC,GAAG,UAG1C,EAAKoB,SAAS,CAAEV,OAAQZ,UAG5B,EAAKsB,SAAS,CAAEjB,UAAW,KAC3B,EAAKiB,SAAS,CAAElB,MAAO,KACvB,EAAKkB,SAAS,CAAEhB,eAAgBb,KAChC,EAAK6B,SAAS,CAAEV,OAAQZ,KAE5B0B,QAAQC,IAAI,iBA1BR,M,oBAmChB,WAAU,IAAD,OACL,OACI,eAACvE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,QAAS,EAA1D,UACI,eAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,UACI,cAACiK,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIlJ,MAAM,UACNmJ,QAAS/I,KAAK5B,MAAM0D,OAAOX,EAC3BuB,KAAK,IACLxD,MAAOc,KAAK5B,MAAM0D,OAAOX,EACzB6H,WAAY,CAAE,aAAc,sBAC5BC,SAAUjJ,KAAK5B,MAAM0D,OAAOV,EAC5Bd,SAAU,SAAClB,GAAD,OAAO,EAAK8J,aAAa9J,MAG3C+J,MAAM,WACNC,eAAe,QAEnB,cAACR,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIlJ,MAAM,UACNmJ,QAAS/I,KAAK5B,MAAM0D,OAAOV,EAC3BsB,KAAK,IACLxD,MAAOc,KAAK5B,MAAM0D,OAAOV,EACzB4H,WAAY,CAAE,aAAc,sBAC5BC,SAAUjJ,KAAK5B,MAAM0D,OAAOX,EAC5Bb,SAAU,SAAClB,GAAD,OAAO,EAAK8J,aAAa9J,MAG3C+J,MAAM,WACNC,eAAe,WAGvB,cAAC9K,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAAC0K,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,2BAApB,wBACA,eAACC,EAAA,EAAD,CACIC,QAAM,EACNC,aAAa,kBACbT,SAAUjJ,KAAK5B,MAAM0D,OAAOV,GAAKpB,KAAK5B,MAAM0D,OAAOX,EACnDb,SAAU,SAAClB,GAAQ,EAAKgD,iBAAiBhD,IACzCF,MAAOc,KAAK5B,MAAMoD,eAAeR,WALrC,UAOI,wBAAQ9B,MAAO,QAAf,mBACA,wBAAQA,MAAO,kBAAf,6BACA,wBAAQA,MAAO,cAAf,yBACA,wBAAQA,MAAO,kBAAf,6BACA,wBAAQA,MAAO,eAAf,kCAIZ,eAACZ,EAAA,EAAD,CAAMK,MAAI,EAAV,cAAY,cAACgL,EAAA,EAAD,CAAWvJ,GAAG,iBAAiB6I,SAAUjJ,KAAK5B,MAAM0D,OAAOV,GAAKpB,KAAK5B,MAAM0D,OAAOX,EAAGgI,MAAM,YAAYH,WAAY,CAAEY,UAAW,IACxItJ,SAAU,SAAClB,GAAD,OAAO,EAAK8C,YAAY9C,EAAE0F,OAAO5F,QAAQA,MAAOc,KAAK5B,MAAMkD,WACzE,eAAChD,EAAA,EAAD,CAAMK,MAAI,EAAV,UACI,eAACkL,EAAA,EAAD,CAAalK,QAAQ,YAAYC,MAAM,UAAUX,aAAW,iCAA5D,UACI,cAACS,EAAA,EAAD,CAAQP,QAASa,KAAK+B,WAAYkH,SAAUjJ,KAAK5B,MAAM0D,OAAOV,GAAKpB,KAAK5B,MAAM0D,OAAOX,EAArF,mBAGA,cAACzB,EAAA,EAAD,CAAQP,QAASa,KAAKiC,UAAtB,sBAIJ,eAAC4H,EAAA,EAAD,CAAajK,MAAM,UAAUX,aAAW,iCAAiCjB,UAAW8L,IAAWC,YAAad,SAAUjJ,KAAK5B,MAAM0D,OAAOV,GAAKpB,KAAK5B,MAAM0D,OAAOX,EAA/J,UAEI,cAACnC,EAAA,EAAD,CAAYC,aAAW,OAAOC,MAAM,OAAOwD,KAAK,aAAa9C,MAAgD,SAAzCI,KAAK5B,MAAMoD,eAAeV,WAAwB,YAAc,UAChI3B,QAAS,SAACC,GAAQ,EAAK4K,YAAY5K,IADvC,SAEI,cAAC6K,EAAA,EAAD,CAAYzK,SAAS,YAEzB,cAACR,EAAA,EAAD,CAAYC,aAAW,SAASC,MAAM,SAASwD,KAAK,YAAY9C,MAA+C,WAAxCI,KAAK5B,MAAMoD,eAAeX,UAAyB,YAAc,UACpI1B,QAAS,SAACC,GAAQ,EAAK4K,YAAY5K,IADvC,SAEI,cAAC8K,EAAA,EAAD,CAAc1K,SAAS,YAE3B,cAACR,EAAA,EAAD,CAAYC,aAAW,aAAayD,KAAK,YAAY9C,MAAOI,KAAK5B,MAAMoD,eAAeT,UAAY,YAAc,UAC5G5B,QAAS,SAACC,GAAQ,EAAK4K,YAAY5K,IADvC,SAEI,cAAC+K,EAAA,EAAD,CAAkB3K,SAAS,YAG/B,cAAClB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,uBAAOuB,KAAK,QAAQE,GAAG,WAAWsC,KAAK,OAAO0H,MAAO,CAAEC,UAAW,IAC9DnL,MAAOc,KAAK5B,MAAMoD,eAAeZ,KAAMN,SAAU,SAAClB,GAAQ,EAAK4K,YAAY5K,IAC3E6J,SAAUjJ,KAAK5B,MAAM0D,OAAOV,GAAKpB,KAAK5B,MAAM0D,OAAOX,MAG3D,eAAC7C,EAAA,EAAD,CAAMK,MAAI,EAACX,UAAW8L,IAAWQ,OAAjC,UACI,cAACC,EAAA,EAAD,CAAYnK,GAAG,oBAAoBoK,MAAM,SAAS5K,MAAM,cAAxD,qBAIA,cAAC6K,EAAA,EAAD,CACIL,MAAO,CAAEzF,MAAO,IAAKH,KAAM,GAAIkG,aAAc,IAAMC,kBAAgB,oBAAoBjI,KAAK,UAC5FxD,MAAOyE,KAAKiH,MAA0C,IAApC5K,KAAK5B,MAAMoD,eAAeP,SAC5CX,SAAUN,KAAKqC,cAAe4G,SAAUjJ,KAAK5B,MAAM0D,OAAOV,GAAKpB,KAAK5B,MAAM0D,OAAOX,EAAG0J,kBAAkB,eAKlH,eAACvM,EAAA,EAAD,CAAMK,MAAI,EAACF,QAAQ,SAAnB,UACI,cAACiB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,UAAW,cAACiL,EAAA,EAAD,IACXhL,WAAS,EACTC,UAAU,QACVZ,QAAS,SAACC,GAAD,OAAO,EAAK2L,cAAa,EAAM3L,IAN5C,2BAUA,eAAC4L,EAAA,EAAD,CAAQC,OAAO,QAAQ5E,KAAMrG,KAAK5B,MAAMqD,OAAQyJ,QAAS,SAAC9L,GAAD,OAAO,EAAK2L,cAAa,EAAO3L,IAAzF,UACI,cAACuK,EAAA,EAAD,CAAWvJ,GAAG,iBAAiB+I,MAAM,WAAWzG,KAAK,WAAWsG,WAAY,CAAEY,UAAW,IAAMtJ,SAAU,SAAClB,GAAD,OAAO,EAAK+L,kBAAkB/L,MACvI,cAACiK,EAAA,EAAD,CAAatJ,UAAU,WAAvB,SACI,mCACI,cAAC6I,EAAA,EAAD,CACI1J,MAAM,QACN2J,QACI,cAACC,EAAA,EAAD,CACIlJ,MAAM,UACNmJ,QAAS/I,KAAK5B,MAAMsD,YAAYC,OAChCe,KAAK,SACLxD,MAAOc,KAAK5B,MAAMsD,YAAYC,OAC9BqH,WAAY,CAAE,aAAc,sBAC5B1I,SAAU,SAAClB,GAAD,OAAO,EAAK+L,kBAAkB/L,MAGhD+J,MAAM,aACNC,eAAe,UAEnB,cAACgC,EAAA,EAAD,CAAWrL,UAAU,SAArB,oBACA,cAACsL,EAAA,EAAD,CAAYpM,aAAW,SAASyD,KAAK,SAArC,SACI,mCACI,cAACkG,EAAA,EAAD,CAAkBlG,KAAK,SAASxD,MAAM,MAAM2J,QAAS,cAACyC,GAAA,EAAD,IAAWnC,MAAM,MAAM7I,SAAU,SAAClB,GAAD,OAAO,EAAK+L,kBAAkB/L,MACpH,cAACwJ,EAAA,EAAD,CAAkBlG,KAAK,SAASxD,MAAM,OAAO2J,QAAS,cAACyC,GAAA,EAAD,IAAWnC,MAAM,OAAO7I,SAAU,SAAClB,GAAD,OAAO,EAAK+L,kBAAkB/L,gBAKtI,cAACM,EAAA,EAAD,CACIE,MAAM,UACNC,UAAW,cAACiL,EAAA,EAAD,IACXhL,WAAS,EACTC,UAAU,QACViI,SAAS,cACTC,KAAK,GACL9I,QAASa,KAAKuC,cAPlB,2C,GAvgBN/B,aC0NP+K,G,kDA7Nb,aAAe,IAAD,8BACZ,gBACKnN,MAAQ,CACXoN,OAAQ,GACRnN,OAAQ,GACR2I,cAAe,GACfyE,YAAa,EACbjD,YAAY,GAEd,EAAKjI,YAAc,EAAKA,YAAYyB,KAAjB,gBACnB,EAAK0J,aAAe,EAAKA,aAAa1J,KAAlB,gBACpB,EAAK2J,SAAW,EAAKA,SAAS3J,KAAd,gBAChB,EAAK/B,UAAY,EAAKA,UAAU+B,KAAf,gBACjB,EAAKqD,YAAc,EAAKA,YAAYrD,KAAjB,gBACnB,EAAK1C,aAAe,EAAKA,aAAa0C,KAAlB,gBACpB,EAAK4E,kBAAoB,EAAKA,kBAAkB5E,KAAvB,gBAfb,E,+CAkBd,SAAY5C,GACV,IAAIf,EAAS2B,KAAK5B,MAAMC,OACxB,GAAmC,IAA/BA,EAAO6F,aAAawC,OAAc,CACpC,IAAIkF,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUxF,GACxB,IAAIyF,EAAS,IAAIC,MACjBD,EAAOE,IAAM3F,EAAMxB,OAAOoH,OAE1BH,EAAOD,OAAS,WAGd,IAAIvH,EAAQ,IAAIzB,SAAOkJ,MAAMD,GAC7BxH,EAAMT,IAAI,CACRqI,QAAS,GACTC,WAAY,GACZC,aAAa,EACbC,YAAY,EACZC,eAAe,EACfC,eAAe,IAEjBnO,EAAOwF,IAAIU,GACX3B,QAAQC,IAAI0B,GACZlG,EAAO4F,gBAAgBM,GACfuD,SAAS2E,uBAAuB,oBAAoB,GAAGC,YACvD5E,SAAS2E,uBAAuB,oBAAoB,GAAGE,aAG/DtO,EAAOuO,aAAarI,KAKpBnF,EAAE0F,OAAO+H,MAAM,KACjBjK,QAAQC,IAAIzD,EAAE0F,OAAO+H,MAAM,IAC3BjB,EAAOkB,cAAc1N,EAAE0F,OAAO+H,MAAM,KAIxC7M,KAAKwC,SAAS,CAAEuK,QAAQ,IACxBjF,SAASkF,eAAe,cAAc9N,MAAQ,O,yBAGhD,SAAYe,GAAY,IAAD,OACrBD,KAAKwC,SAAS,CAAEnE,OAAQ4B,IAAa,WACnC,EAAKuC,UAAS,SAAAyK,GAAI,MAAK,CAAEzE,YAAayE,EAAKzE,eAC3C5F,QAAQC,IAAI,EAAKzE,MAAM4I,eACvBpE,QAAQC,IAAI,EAAKzE,MAAMqN,aACvB7I,QAAQC,IAAI,EAAKzE,MAAMC,a,+BAI3B,WACE,IAAI6O,EAAMlN,KAAK5B,MAAM4I,cACrBkG,EAAIC,OAAOnN,KAAK5B,MAAMqN,YAAa,EAAG3I,SAAOsK,KAAKC,OAAOpK,MAAMjD,KAAK5B,MAAMC,OAAOiP,SAAS,CAAC,aAAc,cAAe,gBAAiB,qBACzItN,KAAKwC,SAAS,CACZwE,cAAekG,M,0BAKnB,SAAa9N,GAAI,IAAD,OACVf,EAAS2B,KAAK5B,MAAMC,OACpBa,EAAQE,EAAEqD,cAAcvD,MAG5B,GAAc,SAAVA,GACF,GAAIc,KAAK5B,MAAMqN,YAAc,EAAG,CAC9B,IAAIyB,EAAMlN,KAAK5B,MAAM4I,cACrBkG,EAAIC,OAAOnN,KAAK5B,MAAMqN,YAAa,EAAG3I,SAAOsK,KAAKC,OAAOpK,MAAMjD,KAAK5B,MAAMC,OAAOiP,SAAS,CAAC,aAAc,cAAe,gBAAiB,qBACzItN,KAAKwC,SAAS,CACZwE,cAAekG,IAEjBlN,KAAKwC,UAAS,SAAAqC,GAAQ,MAAK,CAAE4G,YAAa5G,EAAS4G,YAAc,MAAM,WACrEpN,EAAO4I,aAAa,EAAK7I,MAAM4I,cAAc,EAAK5I,MAAMqN,cAAc,WACpE,EAAKpG,YAAYhH,eAIlB,GAAc,UAAVa,GACLc,KAAK5B,MAAMqN,YAAczL,KAAK5B,MAAM4I,cAAcN,OAAS,EAAG,CAChE,IAAIwG,EAAMlN,KAAK5B,MAAM4I,cACrBkG,EAAIC,OAAOnN,KAAK5B,MAAMqN,YAAa,EAAG3I,SAAOsK,KAAKC,OAAOpK,MAAMjD,KAAK5B,MAAMC,OAAOiP,SAAS,CAAC,aAAc,cAAe,gBAAiB,qBACzItN,KAAKwC,SAAS,CACZwE,cAAekG,IAEjBlN,KAAKwC,UAAS,SAAAqC,GAAQ,MAAK,CAAE4G,YAAa5G,EAAS4G,YAAc,MAAM,WACrEpN,EAAO4I,aAAa,EAAK7I,MAAM4I,cAAc,EAAK5I,MAAMqN,cAAc,WACpE,EAAKpG,YAAYhH,SAKzBA,EAAO4H,c,uBAGT,WAAa,IAAD,OACV,GAAIjG,KAAK5B,MAAM4I,cAAcN,OAAS,EAAG,CACvC,IAAI6G,EAAYvN,KAAK5B,MAAMC,OACvB6O,EAAMlN,KAAK5B,MAAM4I,cACrBkG,EAAIC,OAAOnN,KAAK5B,MAAMqN,YAAa,EAAG3I,SAAOsK,KAAKC,OAAOpK,MAAMsK,EAAUD,SAAS,CAAC,aAAc,cAAe,gBAAiB,qBACjItN,KAAKwC,SAAS,CACZwE,cAAekG,IAEjBK,EAAUvI,QACVuI,EAAUtI,UACV,IAAI5G,EAAS,IAAIyE,SAAOrC,OAAO,SAAU,CACvCyE,wBAAwB,EACxBC,gBAAgB,EAChBC,qBAAqB,IAEvB/G,EAAOiH,GAAG,eAAe,SAAUC,GACjC,IAAIC,EAAQD,EAAInG,EAAEqG,OACdC,EAAOrH,EAAOsH,WAClBD,GAAI,SAAI,KAASF,IACN,KAAIE,EAAO,IAClBA,EAAO,MAAMA,EAAO,KACxBrH,EAAOuH,YAAY,CAAEzE,EAAGoE,EAAInG,EAAEyG,QAASzE,EAAGmE,EAAInG,EAAE0G,SAAWJ,GAC3DH,EAAInG,EAAE2G,iBACNR,EAAInG,EAAE4G,qBAERhG,KAAKwC,UAAS,SAAAqC,GAAQ,MAAK,CAAE4G,YAAa,EAAKrN,MAAM4I,cAAcN,WACnE1G,KAAKqF,YAAYhH,GACjBA,EAAO4H,e,sBAIX,SAASK,GACP,IAAIjI,EAAS2B,KAAK5B,MAAMC,OACxB,GAAqB,IAAjBiI,EAAMkH,OAAV,CAGA,IAAIC,EAAKnH,EAAMoH,QACbC,EAAKrH,EAAMsH,QAYbtF,OAAOuF,iBAAiB,YAAaC,GACrCxF,OAAOuF,iBAAiB,WALxB,SAASE,EAAQzH,GACfgC,OAAO0F,oBAAoB,YAAaF,GACxCxF,OAAO0F,oBAAoB,UAAWD,MATxC,SAASD,EAAYxH,GACnB,IAAInF,EAAImF,EAAMoH,QACZtM,EAAIkF,EAAMsH,QACZvP,EAAO4P,YAAY,CAAE9M,EAAGA,EAAIsM,EAAIrM,EAAGA,EAAIuM,IACvCF,EAAKtM,EACLwM,EAAKvM,K,0BAaT,WACE,IAAI/C,EAAS2B,KAAK5B,MAAMC,OACxBA,EAAO6P,UAAUpG,SAASkF,eAAe,aAAaL,cACtDtO,EAAO8P,SAASrG,SAASkF,eAAe,aAAaN,aACrDrO,EAAO4H,c,+BAGT,WAAqB,IAAD,OACd5H,EAAS,IAAIyE,SAAOrC,OAAO,SAAU,CACvCyE,wBAAwB,EACxBC,gBAAgB,EAChBC,qBAAqB,IAGvBpF,KAAKwC,SAAS,CAAEnE,OAAQA,IAAU,WAChC,EAAKqN,kBAEPrN,EAAOiH,GAAG,eAAe,SAAUC,GACjC,IAAIC,EAAQD,EAAInG,EAAEqG,OACdC,EAAOrH,EAAOsH,WAClBD,GAAI,SAAI,KAASF,IACN,KAAIE,EAAO,IAClBA,EAAO,MAAMA,EAAO,KACxBrH,EAAOuH,YAAY,CAAEzE,EAAGoE,EAAInG,EAAEyG,QAASzE,EAAGmE,EAAInG,EAAE0G,SAAWJ,GAC3DH,EAAInG,EAAE2G,iBACNR,EAAInG,EAAE4G,qBAGR,IAAIzH,EAAYuJ,SAASkF,eAAe,aACxCzO,EAAUsP,iBAAiB,YAAa7N,KAAK2L,UAC7CpN,EAAUsP,iBAAiB,eAAe,SAAAzO,GACxCA,EAAE2G,sB,oBAKN,WACE,OACE,sBAAK/H,UAAWoQ,IAAQ7P,UAAxB,UACE,cAAC,EAAD,IACA,eAACD,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAS,EAAGD,QAAQ,SAASI,GAAI,GAAIwP,GAAI,GAAIjE,MAAO,CAAEkE,OAAQ,QAA9E,UACE,cAAC,EAAD,CAAc/N,YAAaP,KAAKO,YAAaN,UAAWD,KAAKC,UAC3D+G,cAAehH,KAAK5B,MAAM4I,cAAe3B,YAAarF,KAAKqF,YAAahH,OAAQ2B,KAAK5B,MAAMC,OAAQoN,YAAazL,KAAK5B,MAAMqN,YAAanM,aAAcU,KAAKV,eAC7J,cAAC,EAAD,CAAQkM,OAAQxL,KAAK5B,MAAMoN,OAAQuB,OAAQ/M,KAAK5B,MAAM2O,OAAQ1O,OAAQ2B,KAAK5B,MAAMC,SACjF,cAAC,GAAD,CAASA,OAAQ2B,KAAK5B,MAAMC,OAAQgH,YAAarF,KAAKqF,YAAYrD,KAAKhC,MAAOwI,WAAYxI,KAAK5B,MAAMoK,WACnGxB,cAAehH,KAAK5B,MAAM4I,cAAeJ,kBAAmB5G,KAAK4G,8B,GAvN3DpG,aCCH+N,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFpH,SAASkF,eAAe,SAM1BuB,M,wCClBAY,EAAOC,QAAU,CAAC,YAAc,6BAA6B,OAAS,0B,mBCAtED,EAAOC,QAAU,CAAC,UAAY,yB,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,UAAY,4B","file":"static/js/main.991ceda3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import headerCSS from './header.module.css'\r\nfunction Header() {\r\n    return(\r\n          <ul>\r\n             <li>Watermark</li>\r\n             <li className={headerCSS.pink}>Hook</li>\r\n          </ul>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport uploadBtnCSS from './uploadButton.module.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {ArrowBackIos,ArrowForwardIos} from '@material-ui/icons';\r\nimport { fabric } from \"fabric\";\r\n\r\n\r\nclass UploadButton extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n          canvas:{},\r\n        } \r\n    }\r\n\r\n  \r\n    render(){ //view\r\n        return(\r\n      <Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n          <Grid item xs={2} md={1} className={uploadBtnCSS.center}>\r\n              <IconButton aria-label=\"ArrowBack\" value=\"back\" onClick={(e) => this.props.changeCanvas(e)}>\r\n                  <ArrowBackIos fontSize=\"small\"/>\r\n              </IconButton>\r\n           </Grid>\r\n           <Grid item xs={2} md={1} className={uploadBtnCSS.center}>\r\n              <IconButton aria-label=\"ArrowFront\" value=\"front\"  onClick={(e) => this.props.changeCanvas(e)}>\r\n                  <ArrowForwardIos fontSize=\"small\"/>\r\n              </IconButton>\r\n             </Grid>\r\n\r\n         <Grid item xs={4} md={3} className={uploadBtnCSS.center}>\r\n            <Button\r\n             variant=\"contained\"\r\n              color=\"default\"\r\n             startIcon={<AddPhotoAlternateIcon/>}\r\n             fullWidth\r\n             component=\"label\"\r\n             onClick ={this.props.newCanvas}\r\n            >\r\n              New Canvas\r\n          </Button>\r\n          \r\n           </Grid>\r\n         <Grid item xs={4} md={3} className={uploadBtnCSS.center}>\r\n            <Button\r\n             variant=\"contained\"\r\n              color=\"default\"\r\n             startIcon={<CloudUploadIcon />}\r\n             fullWidth\r\n             component=\"label\"\r\n            >\r\n              Upload File\r\n              <input\r\n                type=\"file\"\r\n                hidden\r\n                id=\"imageInput\"\r\n                accept=\"image/*\"\r\n                onChange={e => this.props.uploadImage(e)}\r\n              />\r\n          </Button>\r\n           </Grid>\r\n       </Grid>\r\n          \r\n      )\r\n    }\r\n}\r\n\r\nexport default UploadButton;","import React, {Component} from 'react';\r\nimport canvasCSS from './canvas.module.css'\r\nimport { fabric } from \"fabric\";\r\n\r\nclass Canvas extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n        }\r\n    }\r\n    \r\n   \r\ncomponentDidMount(){\r\n    \r\n}\r\n    render(){ //view\r\n    \r\n        return(\r\n          <div className ={canvasCSS.container} id=\"container\" >\r\n             <canvas id=\"canvas\" ></canvas>\r\n            </div>\r\n         )}\r\n\r\n     }\r\n     export default Canvas;","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport controlCSS from './control.module.css'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { FormatItalic, FormatBold, FormatUnderlined, CloudDownload } from '@material-ui/icons';\r\nimport { fabric } from \"fabric\";\r\nimport { FormControl, Select, MenuItem, InputLabel, Drawer, Checkbox, FormControlLabel, RadioGroup, Radio, FormLabel, Typography } from '@material-ui/core';\r\n\r\n\r\nconst deft = { fill: \"#000000\", fontStyle: \"normal\", fontWeight: \"normal\", underline: false, fontFamily: \"Times New Roman\", opacity: 1} //default watermark config\r\nconst deftR = { x: false, y: false } //default repeat pattern config\r\nclass Control extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            input: \"\",\r\n            watermark: {},\r\n            watermarkProps: deft,\r\n            drawer: false,\r\n            outputProps: { numTag: false, format: \"png\", filename: \"default\" },\r\n            repeat: deftR\r\n        }\r\n        this.handleText = this.handleText.bind(this);   //bind functions to this in order to access props\r\n        this.delCanvas = this.delCanvas.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleFontFamily = this.handleFontFamily.bind(this);\r\n        this.handleOpacity = this.handleOpacity.bind(this);\r\n        this.convertToImagen = this.convertToImagen.bind(this);\r\n        this.batchDownload = this.batchDownload.bind(this);\r\n\r\n    }\r\n\r\n    handleInput(value) { //save text input to state\r\n        this.setState({ input: value });\r\n    }\r\n\r\n    handleOutputProps(e) {  //save values from download menu\r\n        let value = e.currentTarget.value\r\n        let name = e.currentTarget.name\r\n        if (name === \"format\" || name === \"filename\") {\r\n            this.setState(prevState => ({ outputProps: { ...prevState.outputProps, [name]: value } }), () => console.log(this.state.outputProps))\r\n        } else if (name === \"numTag\") {\r\n            this.setState(prevState => ({ outputProps: { ...prevState.outputProps, [name]: !prevState.outputProps[name] } }), () => console.log(this.state.outputProps))\r\n        }\r\n    }\r\n\r\n    handleRepeat(e) {  //apply repeat pattern \r\n        let name = e.currentTarget.name\r\n        let watermark = this.state.watermark;\r\n        if (watermark instanceof fabric.Text) { //type check\r\n            let canvas = this.props.canvas;\r\n            this.setState(prevState => ({ repeat: { ...prevState.repeat, [name]: !prevState.repeat[name] } }), () => {\r\n                if (this.state.repeat[name]) {\r\n                    let canvasMark = canvas.item(1); //get watermark\r\n                    watermark.clone((cloned) => {  //clone watermark  \r\n                        let group = new fabric.Group([], {  //create a group\r\n                            globalCompositeOperation: 'source-atop'\r\n                        });\r\n                        let coords = cloned.getCoords(); //get coordinate\r\n                        let offset\r\n                        if (name === \"y\") {  //get the y of 2 points\r\n                            let tr = coords[1].y;\r\n                            let bl = coords[3].y;\r\n                            offset = Math.abs(tr - bl); //the length is offset\r\n                        }\r\n                        if (name === \"x\") {  //get the x of 2 points\r\n                            let tr = coords[1].x;\r\n                            let bl = coords[3].x;\r\n                            offset = Math.abs(tr - bl); //the length is offset\r\n                        }\r\n                        canvas.add(group);\r\n                        cloned.set({ globalCompositeOperation: 'source-over' })\r\n                        group.add(cloned);\r\n                        group.addWithUpdate();\r\n                        canvas.discardActiveObject();\r\n                        canvas.setActiveObject(group);\r\n                        console.log(canvas.getObjects())\r\n                        this.paste(group, cloned, offset, name); //keep pasting until fill the image  \r\n                        canvasMark.set({  //set single watermark object invisible\r\n                            visible: false\r\n                        })\r\n                    });\r\n                }\r\n                if (this.state.repeat[name] === false) {\r\n                    if (canvas.item(2) instanceof fabric.Group) {\r\n                        canvas.remove(canvas.item(2))\r\n                        canvas.item(1).set({\r\n                            visible: true\r\n                        })\r\n                        canvas.requestRenderAll()\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    paste(group, clone, offset, name) { //implement paste\r\n        let canvas = this.props.canvas\r\n        let image = canvas.getObjects()[0]\r\n        clone.clone((cloned) => { //keep cloning the watermark\r\n            if (name === \"y\") {\r\n                cloned.set({\r\n                    left: cloned.left,\r\n                    top: cloned.top + offset,\r\n                });\r\n            }\r\n            if (name === \"x\") {\r\n                cloned.set({\r\n                    left: cloned.left + offset + 10,\r\n                    top: cloned.top,\r\n                });\r\n            }\r\n            group.add(cloned)\r\n            group.addWithUpdate() //recalculate the group to avoid bugs\r\n            console.log(group.height);\r\n            console.log(image.height);\r\n            if (name === \"y\") {\r\n                if (group.height > image.height) { //see the pattern if longer than image, if yes stop cloning  \r\n                    canvas.requestRenderAll();\r\n                    return;\r\n                }\r\n            }\r\n            if (name === \"x\") {\r\n                if (group.width > image.width) { //see the pattern if wider than image, if yes stop cloning \r\n                    canvas.requestRenderAll();\r\n                    return;\r\n                }\r\n            }\r\n            group.setCoords();\r\n            this.paste(group, cloned, offset, name); //else keep pasting\r\n        })\r\n    }\r\n\r\n\r\n    handleProps(e) { //general function for watermark props\r\n        let value = e.currentTarget.value //get value from click location \r\n        //console.log(value);\r\n        let name = e.currentTarget.name\r\n        if (name === \"fontWeight\" || name === \"fontStyle\") { //handle bold and italic\r\n            if (this.state.watermarkProps[name] === value) { //if selected \r\n                this.setState(preState => (\r\n                    {\r\n                        watermarkProps: { ...preState.watermarkProps, [name]: \"normal\" }  //set to default\r\n                    }), () => this.handleTextChange(name))\r\n            } else {\r\n                this.setState(preState => ( //if default\r\n                    {\r\n                        watermarkProps: { ...preState.watermarkProps, [name]: value } //set to the value\r\n                    }), () => this.handleTextChange(name))\r\n            }\r\n        } else if (name === \"underline\") {  //for underline boolean \r\n            this.setState(preState => (\r\n                {\r\n                    watermarkProps: { ...preState.watermarkProps, [name]: !preState.watermarkProps[name] }\r\n                }), () => this.handleTextChange(name))\r\n        } else if (name === \"fill\") { //for color\r\n            this.setState(preState => (\r\n                {\r\n                    watermarkProps: { ...preState.watermarkProps, [name]: value }\r\n                }), () => this.handleTextChange(name))\r\n        }\r\n    }\r\n    handleFontFamily(e) {//for font family\r\n        this.setState(preState => (\r\n            { watermarkProps: { ...preState.watermarkProps, fontFamily: e.target.value } }), () => { this.handleTextChange(\"fontFamily\") });\r\n    }\r\n\r\n    handleOpacity(e, val) { //Opacity needs specific callback function\r\n        let name = e.currentTarget.name;\r\n        this.setState(preState => (\r\n            { watermarkProps: { ...preState.watermarkProps, opacity: val / 100 } }), () => {\r\n                console.log(this.state.watermarkProps.opacity);\r\n                this.handleTextChange(\"opacity\");\r\n            });\r\n    }\r\n\r\n\r\n    delCanvas() { //reset canvas for wrong image\r\n        let canvas = this.props.canvas;\r\n        canvas.clear();\r\n        canvas.dispose();\r\n        this.setState({ watermark: {} })\r\n        canvas = new fabric.Canvas('canvas', {\r\n            preserveObjectStacking: true,\r\n            fireRightClick: true,\r\n            allowTouchScrolling: true\r\n        })\r\n        this.props.resetCanvas(canvas);\r\n        canvas.on('mouse:wheel', function (opt) { //listen to mouse wheel event, zooming\r\n            var delta = opt.e.deltaY;\r\n            var zoom = canvas.getZoom();\r\n            zoom *= 0.999 ** delta;\r\n            if (zoom > 20) zoom = 20;\r\n            if (zoom < 0.01) zoom = 0.01;\r\n            canvas.zoomToPoint({ x: opt.e.offsetX, y: opt.e.offsetY }, zoom);\r\n            opt.e.preventDefault();\r\n            opt.e.stopPropagation();\r\n        });\r\n        canvas.renderAll();\r\n        console.log(canvas);\r\n    }\r\n\r\n    handleTextChange(stylename, text) {// function for changing watermark according to given props\r\n        let canvas = this.props.canvas;\r\n        console.log(stylename);\r\n        if (this.state.watermark instanceof fabric.Object) {\r\n            if (stylename === \"text\") { //for the text value change\r\n                this.state.watermark.set({\r\n                    [stylename]: text\r\n                })\r\n\r\n            } else {\r\n                this.state.watermark.set({ //for other configurations\r\n                    [stylename]: this.state.watermarkProps[stylename]\r\n                })\r\n            }\r\n            console.log(this.state.watermark);\r\n            canvas.renderAll(); //refresh\r\n        }\r\n    }\r\n    toggleDrawer(open, event) { //for event of download menu , close and open\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        this.setState({ drawer: open });\r\n    }\r\n\r\n    handleText() {\r\n        let canvas = this.props.canvas;\r\n        let getObj = canvas.getObjects();\r\n        let img = getObj[0];\r\n        console.log(canvas);\r\n        console.log(this.state.watermark);\r\n        console.log(img);\r\n        if (img && Object.entries(this.state.watermark).length === 0) { //if no text object yet, create one and add to canvas \r\n            let imgSize = img.height*img.height;\r\n            let textSize = imgSize/15000 // rough scale of watermark size \r\n            //console.log( imgSize,textSize)\r\n            let text = new fabric.Text(this.state.input, {\r\n                fontSize: textSize,\r\n                left: img.left,\r\n                top: img.top,\r\n                id: 'text',\r\n                fontStyle: this.state.watermarkProps.fontStyle,\r\n                fontWeight: this.state.watermarkProps.fontWeight,\r\n                fill: this.state.watermarkProps.fill,\r\n                fontFamily: this.state.watermarkProps.fontFamily,\r\n                underline: this.state.watermarkProps.underline,\r\n                opacity: this.state.watermarkProps.opacity,\r\n                globalCompositeOperation: 'source-atop'\r\n            });\r\n            canvas.add(text);\r\n            this.setState({ watermark: text }, () => { console.log(this.state.watermark) });\r\n            canvas.discardActiveObject();\r\n        } else {\r\n            this.handleTextChange(\"text\", this.state.input); //change text value of existing text object \r\n        }\r\n        canvas.renderAll();\r\n    }\r\n\r\n    batchDownload() {\r\n        this.props.saveCurrentcanvas(); //save current editing image\r\n        let Dummycanvas = new fabric.Canvas('canvas', { // a canvas object for rendering\r\n            id: \"dummy\",\r\n            preserveObjectStacking: true,\r\n            fireRightClick: true,\r\n            allowTouchScrolling: true\r\n        })\r\n        //console.log(Dummycanvas)\r\n        /* this.props.ArrayOfCanvas.forEach(canvas => console.log(canvas));  */\r\n        let counter = 0;\r\n        /* this.props.ArrayOfCanvas.forEach((canvas,index) => {\r\n             this.convertToImagen(Dummycanvas, canvas,index,counter);\r\n         });*/\r\n        this.convertToImagen(Dummycanvas, counter);\r\n    }\r\n\r\n    convertToImagen(canvas, index) { //convert canvas one by one to image recursively, race condition cause error\r\n        // let canvas = this.props.canvas;\r\n        console.log(this.state.outputProps); //for testing\r\n        let cobj = this.props.ArrayOfCanvas[index];\r\n        canvas.loadFromJSON(cobj, () => {\r\n            const sel = new fabric.Group(canvas.getObjects(), { //a group to wrap everything in canvas\r\n            })\r\n            let url\r\n            if (this.state.outputProps.format === \"png\") {\r\n                url = sel.toDataURL('png').replace(\"image/png\", \"image/octet-stream\"); //make the url vaild for downloading\r\n            } else if (this.state.outputProps.format === \"jpeg\") {\r\n                url = sel.toDataURL('jpeg').replace(\"image/jpeg\", \"image/octet-stream\"); //make the url vaild for downloading\r\n            }\r\n            let filename = this.state.outputProps.filename;\r\n            if (this.state.outputProps.format === \"png\") {//for png \r\n                if (this.state.outputProps.numTag) { //filename number tag option \r\n                    filename += `-${index}`\r\n                }\r\n                this.saveAs(url, filename.concat(\".png\")); //download\r\n            } else if (this.state.outputProps.format === \"jpeg\") { //for jpeg\r\n                if (this.state.outputProps.numTag) { //filename number tag option \r\n                    filename += `-${index}`\r\n                }\r\n                this.saveAs(url, filename.concat(\".jpeg\")); //download\r\n            }\r\n            let items = sel.getObjects();\r\n            sel.destroy(); //delete the group after finished rendering\r\n            canvas.remove(sel);\r\n            items.forEach(function (item) {\r\n                item.set('dirty', true); //enable render objects' cache\r\n            })\r\n            canvas.add.apply(canvas, items);\r\n            canvas.renderAll(); //refresh canvas\r\n            console.log(index);\r\n            if (index === this.props.ArrayOfCanvas.length - 1) { //after last image, delete the canvas for rendering\r\n                console.log(\"finsih\");\r\n                canvas.clear();\r\n                canvas.dispose();\r\n                this.props.canvas.renderAll();\r\n                return;\r\n            }\r\n            index++;\r\n            this.convertToImagen(canvas, index); //render image recursively, sync\r\n        });\r\n\r\n    }\r\n\r\n    saveAs(uri, filename) { //simulate user clicking to perform automatic download \r\n        var link = document.createElement('a');\r\n\r\n        if (typeof link.download === 'string') {\r\n\r\n            link.href = uri;\r\n            link.download = filename;\r\n\r\n            //Firefox requires the link to be in the body\r\n            document.body.appendChild(link);\r\n\r\n            //simulate click\r\n            link.click();\r\n\r\n            //remove the link when done\r\n            document.body.removeChild(link);\r\n\r\n        } else {\r\n            window.open(uri);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {  //React method, execute if props.canvas changed\r\n        if (prevProps.canvasSpin !== this.props.canvasSpin) { //spinning signal indicate change \r\n            let obj = this.props.canvas.getObjects();\r\n            console.log(obj);\r\n            if (obj.length === 0) { //reset control buttons to default for empty canvas \r\n               /* console.log(\"NewCanvas\")\r\n                console.log(this.props.canvas);*/\r\n                this.setState({ watermark: {} });\r\n                this.setState({ input: \"\" });\r\n                this.setState({ watermarkProps: deft });\r\n                this.setState({ repeat: deftR });\r\n            } else {\r\n                let watermark = obj[1];\r\n                let group = obj[2];\r\n               // console.log(group);\r\n                if (watermark !== undefined) { //change the control buttons according to current watermark\r\n                    this.setState({ watermark: watermark });\r\n                    this.setState({ input: watermark.text });\r\n                    for (const prop in this.state.watermarkProps) {\r\n                        this.setState(preState => ({ watermarkProps: { ...preState.watermarkProps, [prop]: watermark[prop] } }))\r\n                    }\r\n                    if (group !== undefined) { //change the pattern section of control buttons according to pattern\r\n                        let canvas = this.props.canvas;\r\n                        if (group.height > canvas.height) {\r\n                            this.setState({ repeat: { x: false, y: true } })\r\n                        } else if (group.width > canvas.width) {\r\n                            this.setState({ repeat: { x: true, y: false } })\r\n                        }\r\n                    }else{\r\n                        this.setState({ repeat: deftR });\r\n                    }\r\n                } else { //has image but no watermark, still set to default\r\n                    this.setState({ watermark: {} }); //reset control buttons\r\n                    this.setState({ input: \"\" });\r\n                    this.setState({ watermarkProps: deft }); //default water attributes\r\n                    this.setState({ repeat: deftR });  //default pattern attributes\r\n                }\r\n                console.log(\"loadoldcanvas\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //layout of bottom buttons\r\n    render() {\r\n        return (\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n                <Grid item>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                color=\"primary\"\r\n                                checked={this.state.repeat.x}\r\n                                name=\"x\"\r\n                                value={this.state.repeat.x}\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                disabled={this.state.repeat.y}\r\n                                onChange={(e) => this.handleRepeat(e)}\r\n                            />\r\n                        }\r\n                        label=\"repeat-x\"\r\n                        labelPlacement=\"End\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                color=\"primary\"\r\n                                checked={this.state.repeat.y}\r\n                                name=\"y\"\r\n                                value={this.state.repeat.y}\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                disabled={this.state.repeat.x}\r\n                                onChange={(e) => this.handleRepeat(e)}\r\n                            />\r\n                        }\r\n                        label=\"repeat-y\"\r\n                        labelPlacement=\"End\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"filled-age-native-simple\">FontFamily</InputLabel>\r\n                        <Select\r\n                            native\r\n                            defaultValue=\"Times New Roman\"\r\n                            disabled={this.state.repeat.y || this.state.repeat.x}\r\n                            onChange={(e) => { this.handleFontFamily(e) }}\r\n                            value={this.state.watermarkProps.fontFamily}\r\n                        >\r\n                            <option value={\"Arial\"}>Arial</option>\r\n                            <option value={\"Times New Roman\"}>Times New Roman</option>\r\n                            <option value={\"Courier New\"}>Courier New</option>\r\n                            <option value={\"Brush Script MT\"}>Brush Script MT</option>\r\n                            <option value={\"Trebuchet MS\"}>Trebuchet MS</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item> <TextField id=\"standard-basic\" disabled={this.state.repeat.y || this.state.repeat.x} label=\"watermark\" inputProps={{ maxLength: 45 }}\r\n                    onChange={(e) => this.handleInput(e.target.value)} value={this.state.input} /></Grid>\r\n                <Grid item>\r\n                    <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                        <Button onClick={this.handleText} disabled={this.state.repeat.y || this.state.repeat.x}>\r\n                            apply\r\n                        </Button>\r\n                        <Button onClick={this.delCanvas}>\r\n                            reset\r\n                         </Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"contained primary button group\" className={controlCSS.textbuttons} disabled={this.state.repeat.y || this.state.repeat.x}>\r\n\r\n                        <IconButton aria-label=\"Bold\" value=\"bold\" name=\"fontWeight\" color={this.state.watermarkProps.fontWeight === \"bold\" ? \"secondary\" : \"primary\"}\r\n                            onClick={(e) => { this.handleProps(e) }}>\r\n                            <FormatBold fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"italic\" value=\"italic\" name=\"fontStyle\" color={this.state.watermarkProps.fontStyle === \"italic\" ? \"secondary\" : \"primary\"}\r\n                            onClick={(e) => { this.handleProps(e) }}>\r\n                            <FormatItalic fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"underlined\" name=\"underline\" color={this.state.watermarkProps.underline ? \"secondary\" : \"primary\"}\r\n                            onClick={(e) => { this.handleProps(e) }}>\r\n                            <FormatUnderlined fontSize=\"small\" />\r\n                        </IconButton>\r\n\r\n                        <Grid item>\r\n                            <input type=\"color\" id=\"favcolor\" name=\"fill\" style={{ marginTop: 15 }}\r\n                                value={this.state.watermarkProps.fill} onChange={(e) => { this.handleProps(e) }}\r\n                                disabled={this.state.repeat.y || this.state.repeat.x}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className={controlCSS.slider}>\r\n                            <Typography id=\"continuous-slider\" align=\"center\" color=\"textPrimary\" >\r\n                                Opacity\r\n                            </Typography>\r\n\r\n                            <Slider\r\n                                style={{ width: 120, left: 15, marginBottom: 10 }} aria-labelledby=\"continuous-slider\" name=\"opacity\"\r\n                                value={Math.round(this.state.watermarkProps.opacity * 100)}\r\n                                onChange={this.handleOpacity} disabled={this.state.repeat.y || this.state.repeat.x} valueLabelDisplay=\"auto\"\r\n\r\n                            />\r\n                        </Grid>\r\n                    </ButtonGroup>\r\n                    <Grid item justify=\"center\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            startIcon={<CloudDownload />}\r\n                            fullWidth\r\n                            component=\"label\"\r\n                            onClick={(e) => this.toggleDrawer(true, e)}\r\n                        >\r\n                            download menu\r\n                    </Button>\r\n                        <Drawer anchor=\"right\" open={this.state.drawer} onClose={(e) => this.toggleDrawer(false, e)}>\r\n                            <TextField id=\"standard-basic\" label=\"filename\" name=\"filename\" inputProps={{ maxLength: 45 }} onChange={(e) => this.handleOutputProps(e)} />\r\n                            <FormControl component=\"fieldset\">\r\n                                <center>\r\n                                    <FormControlLabel\r\n                                        value=\"start\"\r\n                                        control={\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={this.state.outputProps.numTag}\r\n                                                name=\"numTag\"\r\n                                                value={this.state.outputProps.numTag}\r\n                                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                                onChange={(e) => this.handleOutputProps(e)}\r\n                                            />\r\n                                        }\r\n                                        label=\"Number Tag\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n                                    <FormLabel component=\"legend\">Format</FormLabel>\r\n                                    <RadioGroup aria-label=\"gender\" name=\"Format\">\r\n                                        <center>\r\n                                            <FormControlLabel name=\"format\" value=\"png\" control={<Radio />} label=\"PNG\" onChange={(e) => this.handleOutputProps(e)} />\r\n                                            <FormControlLabel name=\"format\" value=\"jpeg\" control={<Radio />} label=\"JPEG\" onChange={(e) => this.handleOutputProps(e)} />\r\n                                        </center>\r\n                                    </RadioGroup>\r\n                                </center>\r\n                            </FormControl>\r\n                            <Button\r\n                                color=\"default\"\r\n                                startIcon={<CloudDownload />}\r\n                                fullWidth\r\n                                component=\"label\"\r\n                                download=\"myImage.jpg\"\r\n                                href=\"\"\r\n                                onClick={this.batchDownload}\r\n                            >\r\n                                download File\r\n                           </Button>\r\n                        </Drawer>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport MainCSS from './App.module.css';\nimport Container from '@material-ui/core/Container';\nimport Header from './components/header.js';\nimport Grid from '@material-ui/core/Grid';\nimport UploadButton from './components/UploadButton';\nimport Canvas from './components/canvas';\nimport Control from './components/controlpanel';\nimport { fabric } from \"fabric\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {  //set of states to save state of different parts\n      images: [],\n      canvas: {},\n      ArrayOfCanvas: [],\n      canvasIndex: 0,\n      canvasSpin: false\n    }\n    this.uploadImage = this.uploadImage.bind(this);  //bind to this class for child component to modify parent's states\n    this.resizeCanvas = this.resizeCanvas.bind(this);\n    this.startPan = this.startPan.bind(this);\n    this.newCanvas = this.newCanvas.bind(this);\n    this.resetCanvas = this.resetCanvas.bind(this);\n    this.changeCanvas = this.changeCanvas.bind(this);\n    this.saveCurrentcanvas = this.saveCurrentcanvas.bind(this);\n  }\n\n  uploadImage(e) {\n    let canvas = this.state.canvas;\n    if (canvas.getObjects().length === 0) { //if canvas is empty\n      var reader = new FileReader();   //to read file\n      reader.onload = function (event) {\n        var imgObj = new Image();  \n        imgObj.src = event.target.result;\n\n        imgObj.onload = () => {\n          // start fabricJS stuff\n\n          var image = new fabric.Image(imgObj);  //new fabric.Image instance\n          image.set({\n            padding: 10,\n            cornersize: 10,\n            hasControls: false,\n            selectable: false,\n            lockMovementX: true,\n            lockMovementY: true\n          });\n          canvas.add(image);  //add to the current fabric.canvas \n          console.log(image) //for testing\n          canvas.setActiveObject(image);\n          let w = document.getElementsByClassName(\"canvas-container\")[0].offsetWidth; \n          let h = document.getElementsByClassName(\"canvas-container\")[0].offsetHeight;\n          /*image.scaleToWidth(w-200);*/\n          /* image.scaleToHeight(h-200);*/\n          canvas.centerObject(image); //center the image \n          // end fabricJS stuff\n\n        }\n      }\n      if (e.target.files[0]) {\n        console.log(e.target.files[0]) //for testing \n        reader.readAsDataURL(e.target.files[0]); //read the image data url \n      }\n    }\n\n    this.setState({ isload: true }); //indicate loaded but not using anymore\n    document.getElementById(\"imageInput\").value = null; //clean input value\n  }\n\n  resetCanvas(newCanvas) {  //function to reset canvas after swapped or created new canvas \n    this.setState({ canvas: newCanvas }, () => {\n      this.setState(prev => ({ canvasSpin: !prev.canvasSpin }));\n      console.log(this.state.ArrayOfCanvas);\n      console.log(this.state.canvasIndex);\n      console.log(this.state.canvas);\n    })\n  }\n\n  saveCurrentcanvas() { //save the state of current canvas\n    let arr = this.state.ArrayOfCanvas\n    arr.splice(this.state.canvasIndex, 1, fabric.util.object.clone(this.state.canvas.toObject(['selectable', 'hasControls', 'lockMovementX', ' lockMovementY'])))\n    this.setState({\n      ArrayOfCanvas: arr\n    })\n  }\n\n\n  changeCanvas(e) { //to change canvas to other in ArrayOfCanvas\n    let canvas = this.state.canvas;\n    let value = e.currentTarget.value;\n   /* console.log(this.state.ArrayOfCanvas);\n    console.log(this.state.canvas);*/\n    if (value === \"back\") { //go to previous\n      if (this.state.canvasIndex > 0) { //if current is not the first one \n        let arr = this.state.ArrayOfCanvas\n        arr.splice(this.state.canvasIndex, 1, fabric.util.object.clone(this.state.canvas.toObject(['selectable', 'hasControls', 'lockMovementX', ' lockMovementY'])))\n        this.setState({  //save the current canvas\n          ArrayOfCanvas: arr\n        })\n        this.setState(preState => ({ canvasIndex: preState.canvasIndex - 1 }), () => {\n          canvas.loadFromJSON(this.state.ArrayOfCanvas[this.state.canvasIndex], () => {  //load canvas from array\n            this.resetCanvas(canvas);\n          })\n        })\n      }\n    } else if (value === \"front\") { //go to next\n      if (this.state.canvasIndex < this.state.ArrayOfCanvas.length - 1) { //if current is not the last one \n        let arr = this.state.ArrayOfCanvas\n        arr.splice(this.state.canvasIndex, 1, fabric.util.object.clone(this.state.canvas.toObject(['selectable', 'hasControls', 'lockMovementX', ' lockMovementY'])))\n        this.setState({\n          ArrayOfCanvas: arr //save the current canvas\n        })\n        this.setState(preState => ({ canvasIndex: preState.canvasIndex + 1 }), () => {\n          canvas.loadFromJSON(this.state.ArrayOfCanvas[this.state.canvasIndex], () => {\n            this.resetCanvas(canvas); //load canvas from array\n          })\n        })\n      }\n    }\n    canvas.renderAll(); //refresh canvas\n  }\n\n  newCanvas() { //create new canvas\n    if (this.state.ArrayOfCanvas.length < 5) { //if under maximum number of canvas\n      let oldcanvas = this.state.canvas;\n      let arr = this.state.ArrayOfCanvas\n      arr.splice(this.state.canvasIndex, 1, fabric.util.object.clone(oldcanvas.toObject(['selectable', 'hasControls', 'lockMovementX', ' lockMovementY'])))\n      this.setState({\n        ArrayOfCanvas: arr   //save current canvas\n      })\n      oldcanvas.clear();  //clean old canvas from html\n      oldcanvas.dispose();\n      let canvas = new fabric.Canvas('canvas', {  //new fabric.canvas\n        preserveObjectStacking: true,\n        fireRightClick: true,\n        allowTouchScrolling: true\n      })\n      canvas.on('mouse:wheel', function (opt) { //new canvas listen to mouse wheel event, zooming\n        var delta = opt.e.deltaY;\n        var zoom = canvas.getZoom();\n        zoom *= 0.999 ** delta;\n        if (zoom > 20) zoom = 20;\n        if (zoom < 0.01) zoom = 0.01;\n        canvas.zoomToPoint({ x: opt.e.offsetX, y: opt.e.offsetY }, zoom); //zoom to mouse point\n        opt.e.preventDefault();\n        opt.e.stopPropagation();\n      });\n      this.setState(preState => ({ canvasIndex: this.state.ArrayOfCanvas.length }))\n      this.resetCanvas(canvas);\n      canvas.renderAll();\n    }\n  }\n\n  startPan(event) {//panning, listen to right click that user can drag the canvas  \n    let canvas = this.state.canvas;\n    if (event.button !== 2) {\n      return;\n    }\n    var x0 = event.screenX,\n      y0 = event.screenY;\n    function continuePan(event) {\n      var x = event.screenX,\n        y = event.screenY;\n      canvas.relativePan({ x: x - x0, y: y - y0 });\n      x0 = x;\n      y0 = y;\n    }\n    function stopPan(event) {\n      window.removeEventListener(\"mousemove\", continuePan);\n      window.removeEventListener(\"mouseup\", stopPan);\n    };\n    window.addEventListener(\"mousemove\", continuePan);\n    window.addEventListener(\"mouseup\", stopPan);\n\n  }\n\n\n\n  resizeCanvas() {//set canvas to match size of html container\n    let canvas = this.state.canvas;\n    canvas.setHeight(document.getElementById('container').offsetHeight);\n    canvas.setWidth(document.getElementById('container').offsetWidth);\n    canvas.renderAll();\n  }\n\n  componentDidMount() { //React lifecycle similar to window.onload\n    let canvas = new fabric.Canvas('canvas', { //new fabric canvas\n      preserveObjectStacking: true,\n      fireRightClick: true,\n      allowTouchScrolling: true\n    })\n   // console.log(canvas);    //for testing\n    this.setState({ canvas: canvas }, () => {  //save it to state\n      this.resizeCanvas();     \n    });\n    canvas.on('mouse:wheel', function (opt) { //listen to mouse wheel event, zooming\n      var delta = opt.e.deltaY;\n      var zoom = canvas.getZoom();\n      zoom *= 0.999 ** delta;\n      if (zoom > 20) zoom = 20;\n      if (zoom < 0.01) zoom = 0.01;\n      canvas.zoomToPoint({ x: opt.e.offsetX, y: opt.e.offsetY }, zoom);\n      opt.e.preventDefault();\n      opt.e.stopPropagation();\n    });\n\n    let container = document.getElementById(\"container\");\n    container.addEventListener(\"mousedown\", this.startPan);\n    container.addEventListener('contextmenu', e => {  //prevent contextmenu popup in canvas\n      e.preventDefault();\n    });\n  }\n\n\n  render() { //view\n    return (\n      <div className={MainCSS.container}>\n        <Header />\n        <Grid container spacing={1} justify=\"center\" md={10} sm={12} style={{ margin: 'auto' }}>\n          <UploadButton uploadImage={this.uploadImage} newCanvas={this.newCanvas}\n            ArrayOfCanvas={this.state.ArrayOfCanvas} resetCanvas={this.resetCanvas} canvas={this.state.canvas} canvasIndex={this.state.canvasIndex} changeCanvas={this.changeCanvas} />\n          <Canvas images={this.state.images} isload={this.state.isload} canvas={this.state.canvas} />\n          <Control canvas={this.state.canvas} resetCanvas={this.resetCanvas.bind(this)} canvasSpin={this.state.canvasSpin}\n            ArrayOfCanvas={this.state.ArrayOfCanvas} saveCurrentcanvas={this.saveCurrentcanvas} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n/*\n  © CSCI370 MING WAI TOMMY, CHAN FINAL PROJECT, Watermark Hook™ \n*/ \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textbuttons\":\"control_textbuttons__2tRux\",\"slider\":\"control_slider__3vdYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__30NU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pink\":\"header_pink__1ebYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__23mUp\",\"loaded\":\"canvas_loaded__9oOBn\",\"container\":\"canvas_container__3h8qf\"};"],"sourceRoot":""}